==============================
test file of 0-add_integer.py
==============================

Using ''add_integer(a, b=48)'' with integer or floats
______________________________

First import ''add_integer'' from the ''0-add_integer'' module:

>>> add_integer = __import__('0-add_integer').add_integer

Tests
______________________________
""" Passing Tests """

>>> add_integer(1, 2)
3

>>> add_integer(-1, 1)
0

>>> add_integer(10000000000000000, 10)
10000000000000010

>>> add_integer(11.2, 3)
14

>>> add_integer(2)
100

>>> add_integer((1 * 10**100), 5)
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005

>>> add_integer((1 * 10**100))
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098

""" Tests that should raise an Error """

>>> add_integer(None)
Traceback (most recent call last):
          ...
TypeError: a must be an integer

>>> add_integer("h", 2)
Traceback (most recent call last):
	  ...
TypeError: a must be an integer

>>> add_integer(1, 2, 3)
Traceback (most recent call last):
          ...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer([1], 3)
Traceback (most recent call last):
          ...
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
          ...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(3, "5")
Traceback (most recent call last):
          ...
TypeError: b must be an integer

>>> add_integer(5, {"key": 'value'})
Traceback (most recent call last):
	  ...
TypeError: b must be an integer

>>> add_integer((5, 4), {"key": 'value'})
Traceback (most recent call last):
          ...
TypeError: a must be an integer

>>> add_integer(float("hello"), 2)
Traceback (most recent call last):
          ...
ValueError: could not convert string to float: 'hello'
